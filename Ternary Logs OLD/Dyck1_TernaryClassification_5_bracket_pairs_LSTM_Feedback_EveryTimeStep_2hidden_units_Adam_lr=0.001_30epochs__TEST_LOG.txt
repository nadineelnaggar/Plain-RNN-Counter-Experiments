////////////////////////////////////////
TEST short
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
test accuracy = 94.6330777656079%
confusion matrix for test set = 
tensor([[267.,  38.,   0.],
        [  0., 304.,   0.],
        [  3.,   8., 293.]])
correct guesses in testing
incorrect guesses in testing = ['()())(', '((()))', ')((())', '(())()', '(()())', '(())', '()(())', ')(((', '()()()', '(())', '((()))', '((()))', ')(((((', '()', '()(())', '(())', ')(((()()', '((()))', '()', '()()', '(()())', ')()()(', '()(())', '(()())', '()())(((', '()()()', '(()())', '(()())', '()()', '(())()', '(()())', ')((()(((', '())(()', '(())', '()', '()(())', '(())()', '()()()', '(()())', ')((((((()(', '(())', '()', '((()))', '()(())', '(())()', ')(()()', '()', '()(())', '()()()']
////////////////////////////////////////
TEST short
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
test accuracy = 100.0%
confusion matrix for test set = 
tensor([[305.,   0.,   0.],
        [  0., 304.,   0.],
        [  0.,   0., 304.]])
correct guesses in testing = ['(((((((()(', '(()(()())(', '(((((())))', '()(()((())', '(())()()()', '((()))()', '(((())()((', '()())(', '(((())))', '((())()()(', ')()())()', '())()(((((', '((()()))()', ')((()(()((', '())))(((()', '()((())(', '(()(()()))', '((()))()()', '((((()))))', '(((()())()', '(())(())((', '((())())()', ')))((((()(', '()(()(()((', '(()(())())', '(((()()())', '(()((())((', '))()()()()', '(())()()', ')()((()))(', '()()(())', '))((((((', '()((()()))', ')))())(()(', '(()())))', '()(()(()))', ')()()))()(', '((()()((', '(())(())((', '((()(()(()', '()(()(()((', '()()()()', '(()(', ')()()))(()', '((())())()', '()()()(())', '((())(())(', '((()()))()', '()(())((()', '(()((())))', '(((((()()(', '(()(((((', '()((((()()', '()(((()(()', '()()()))))', '((())(()()', '()(()())()', ')()())))))', '(())((()))', '((()))(())', '))(())))()', '((()()())(', '()()((())(', '))(((((()(', '()(()()())', '()))())())', '(())(()())', '(()(()))()', ')))()))(', '(()))))())', '()(())((()', '((())())', '))())()))(', ')(()))((', '(())()()()', '(()(((()()', '())())())(', '(()()())()', ')))))))())', '()()))((', '((())((()(', '((()())())', '()(((((())', '()()((((', ')(())(((', '()()()()()', '()()(()())', ')(())(()()', '(()))((())', ')(()(()()(', '()(()(()((', '()((()))()', '(()())()((', ')())(((()(', '((((()()', '))))()))((', '(((()(())(', '()()())))(', '()(()(()', '()()((((()', '(()()(()))', '(((()(()))', ')))))()()(', '((()((()))', '(((()))())', '(()((((()(', '(()()()()(', '(()(())())', '((()))', '(((((()))(', '()(())(())', '())())(()(', '(())((()))', '()(()(()', '()(()()(', '((()))()()', ')))((()(((', '(()()(()((', '()((())())', '()(((()()(', '))()((()()', ')(()(((())', ')((())', '()(())()()', '(()(((', '()()()()()', '(((())(()(', '()((()))()', '))()()((()', ')())))))))', ')(()())())', '(()(((()', ')())()()', '()()((', '(()())(())', '(()()(())(', '))(((()(((', ')))(()()()', '))(()(()))', ')))(()((((', ')))))()())', '(())(()(', '((()(((()(', '())))(((((', '()(()()))(', '()((()(())', '()(((())', ')((()(((((', '(()(()()', '(())(())', '((()))((((', '((()(((())', '(((()((())', '((()()))()', ')((())((()', '(()((()(', '(((()())))', '(())()', '((())((()(', '(((()))())', '(())(((()(', '(()())', '((((())())', '(((())()()', '()()()))', '((())()(', '()()((()()', '()(((())))', '(()()()(()', '((((((((', '))((()()))', '()()((()))', '((())())))', '((())()())', '((()(()))(', ')(()()()((', ')(()((((()', '()())()()(', '()((((((', '())(()((()', '(((()))())', '(((((()))(', '((()(((())', '(()()()())', '))())(()((', '()))(()(()', '(())()(())', '()()(())()', '()()(()(', '(((()())))', '))))))(())', '()(()(()((', ')())))((', '()((()))()', ')))()()()(', '((())(()))', '(((((())()', '())(()))))', '()(()())()', '))))())(()', '(()(()', '(()(())()(', '(((())))', '()((()))()', '(((())((', '(())((', '(())))()((', '(()((())()', '(())', ')())((()', '())(())(((', ')))(((((()', '()()))(())', '((())((())', '()()))()))', '(()((())))', '((((()((()', '((()(()(()', '((()()))()', '()(()((()(', '()()(())()', '((()(())((', ')(()(()())', '(()()(()))', '()(())', '()))(((()(', '(((()))()(', '))))))))((', '())()))(((', '(((())))', ')()()()(()', '())()())((', '((()', ')())(())((', '()(())(())', '(()(((())(', '))((())(', '())()(()))', '((()()()))', ')())()()()', ')(((', '()((()()))', '((()))()()', '(()())()((', '()))))(()(', ')((())())(', '()()()()((', '(()(()()))', '(()())()', '())(())))(', '((()))(())', ')(()(())', '))()))))()', ')((())))()', '(((()))()(', '()(())))()', '(()()())', ')))())))()', ')())((()((', '()((((()))', ')()()(()', '((())())', '()()()', '(()(((((((', '()()))())(', '(())((', '()((()()))', '((())()))(', '()((())())', ')))()(', '()((())())', ')))((()(()', '((()))()()', '((()(())((', ')))((())()', '((((()((()', '((())())()', '))(())((()', '(())', '(()((()()(', '()(()())', '(((())))', '((((())))(', '(((()(((((', '((())())', '(()()(((', ')()()(((((', '(()()()()(', '()(((())))', '((()()))', '((()))', ')(()()))', ')()())))((', '((((()))))', '()())))(((', '(((()))(((', '()(()(', '((()))', '((()(()()(', '()(()())()', '((()(())', '))))()((', '((((()((', '()()()()()', '((()(())))', '((()()()))', '((()()()()', '()(()((()(', '(())(()())', '))(()())((', '()(((((()(', '((())()())', '()((()()))', ')))())))((', '(()(((()((', '(()()(()))', ')()(((()', '((())(', '())()))))(', '(()()())((', ')())(()()(', '()()(())', ')(((((', '(((((((()(', '(((()())()', '(()(()((', '(()(())())', ')()((()(((', '((()()))()', '((()(()(()', '(()()()(', '(()(()))((', '(()(())()(', '((())(()))', '(()(()())(', '()((((((', ')())))', '())(()))()', '((((())(', '()(()(()))', '()((()))', '))())))(()', '(((())()))', '((()())())', '(((())))((', '((((()))))', '()()((()))', '((((())))(', '((()()))))', '(())((()', '()((()()((', '()', '(()))))(((', '()())())', '()(((())))', '()((()((', '(((())))', ')(((())))(', ')((()))(((', '((()(())', ')))(((', ')(()()))((', '()))))((((', '((((()', '(()()(()))', '()(())()()', '))())))(((', '())())()()', '))))(((())', ')()()())((', '((())(()', '(((()(()))', '(()((((())', '((())(((((', '(())(())', '()()((()))', '(()())()()', '(())()))', '((()()()))', ')())', '()()((((((', ')((()(()', '()(()()(()', '((())()(()', '()()()()()', '(((()(()((', '((()())(()', '))))()((()', ')()(())(()', '()(())', '(()()())', '()(()()(', '(()(((((()', '()((())(((', '())()((()(', ')()))))(()', '))(()()(((', ')))()()(((', '()(())()()', '(()()(()()', '((()))(())', ')()))()))(', '))()()', '(()((())))', '((()))()', '((()())(()', ')()))(((((', '(()()())()', '))())(((', '()()((()', '()(())()()', ')(()())(((', ')))))(()', '(()())((((', '()(()(((()', '())(((()()', '())())()))', '(())', '()()()(())', ')()(((((', '(()(()()((', '((()))()()', '()()))()((', '(((()))()(', '()(((())()', ')()())()))', '()()(((())', '((())(()', '((((())(()', '()())))())', '(((())()))', '(())(()())', '(())))))((', '(()()()())', '((())))()(', '()((((((((', '((()((', ')(()))))', '(()(((()', '()()()()()', '((((((()((', '(((()())()', '(((((())', '()(()(', '()((()))', '((())(()))', '))))))))', ')()(()))((', ')(((()()', '()()((((()', '((()))', '()((((()()', '(())()(())', '(()(()(())', '())(((()((', '((()()))()', '(())()((()', '(((()()(((', '(((())()))', '(((())((', '()()((((', '((()))))))', '((()()))', '()(()((())', '(()(()))()', '()(()(()((', '((()())()(', '()((())(()', '(()())(())', '))))())())', '())()(())(', '))((()', '()(()()()(', '(()()()())', '))))()()', '(()(((((()', '(()((())))', '))()()(()(', ')((()))(()', '((()())())', ')()(()))', '))(())()()', '())()(()()', '((((())(', ')(()))))()', '(((()))()(', '())(()))((', '(()(((())(', '())))(()))', '()()))))()', ')(((((()))', '(()()(()))', '(()(((((((', '(()(())())', '((((())())', '(()()())((', '()(((())))', '(()()(((()', '((((())(((', ')())()))()', '())))((()(', '()', '(((())', '()((()()))', '()))(()()(', '()(((())))', '(()()))()(', '(())()(())', '(((())((((', '()(()()())', '(())()((((', '())(()())(', '(()()(()', '(()()(()()', '(((())))', '()))(())()', '()()', '(())((()()', '(()()(()', '((()()', '(()(((((', '((()))))()', '(()())()()', '()((())())', '()(()())()', '()(()()())', ')(()(()))(', '((()())(()', '()((()))()', '(()(())(((', '((())())()', '))()((((()', '()()(((()(', '(()())(()(', '(()()(())(', '((()(())))', '((())))(', ')(((()))()', '(((()(((', '()()()(())', '(()((())))', '((())())()', '(()())(()(', '(()())()()', '((()))()', '()((())())', '()((()', '(())((()()', '()()((((()', '((()))((', '((()))(())', '(()(()(()(', '(()())', '(((())()((', '())))()(()', ')()))())))', '(()(())(((', '()())()(((', '(((()())))', '(((())()))', '((()())())', '()(()())', ')))))()(((', '((()))()()', '((()())())', '(((())))', '()()()()))', ')()()(', '))())())()', '()()((())(', '()(())', '()))', '(()(())())', '(()()())()', '((()(())((', '(((((()())', ')))))(((', ')())(((())', '((()()))((', '(())()(())', '(())(())((', '()(())(())', ')))()()(', ')()())', ')()()())', '()()(()(()', '()()(())', ')))()()())', ')((()()(((', '(()(((()', '()()((((', '()))((', '()(()())))', '()(())((', '()((()))()', '((()()(())', '))()()((((', '((())(()))', ')))())()', '((())(()))', '((()(()))(', '(()())', '()()()((', '))(((((())', '()))(()())', '())()(()', '()(((())))', ')))(()))))', ')())(())', '((())()(()', '(())(()(()', '(()(()))()', ')))(()((()', '()(()(()))', ')()((())))', '()(())))((', '()(()()())', '(()()()()(', '))()()())(', '))(()())()', '))((((((()', '((()()(())', '(())(()(((', '())()())()', ')))))()))(', '(()(())())', '())()(()((', '()(()()())', ')(((()()))', '))()))(())', '()()))((()', '((())())()', '()())())((', '))((((()', '))((((())(', '()))()()))', '))((', ')(()()())(', '()()((((()', '(((()(())(', ')))((()()(', '()())(((', '((()()(())', '))(())((', '()((()))()', '()()()()', '(((()())))', '(((())))()', '(((())()()', '(()()()())', '((())(', '()()()', '(())((', '()(((()(', '((()(())', '((()()((()', '((()(())((', '(())(()())', '()()()((((', '((())(((', '((())())', '()))()))', '(()())', ')(())())', '()(((())', '()()()()((', '()()(())', '()(()()())', '()((()))', '))(())()', '()((()', '())((()()(', '(()(((()((', '))(()))))(', '(()())', ')))(((((', '()(()())()', '((()))(())', ')((())()', '((()(())))', '(((((()(', '(()())()()', '((()(()())', '(((((((())', '(((()(()()', '(((()))(((', '()()', '(((()(((', '(())(()(()', ')(()))((()', '(()((())', '()(())()', '(())(())', '()()(((())', '()()(()())', '(()(((())(', '()()(())', '()()()((()', ')))))))()(', '))()()()))', '(((()()())', '(()())()()', '(()()()())', ')))()((())', '(()(()()))', '(())()', '()(()(', '()(()(', ')(()()))()', ')(()((()))', '(()())', '()((())())', '()((()()((', '))))(())()', '((()()))', ')((()())', '(()((()))(', '(())()(())', ')))())()((', '((()())())', '))))())(((', ')()()()(((', '))()((()))', ')((()(((', '())(()', '(((())())(', '((())())()', '()(()(()))', '((())())', '(()(()))()', '(((()))))(', '()(((()()(', ')((()((()(', '(())', '(((())))', '(()()()(()', ')())(()(', '((())((()(', '((((()(())', ')))()))(((', '(((()())))', '()()(()())', '()((()()((', '()(()(()))', '((()))(())', '((((()()))', '((())())()', ')()())()()', '))))()))', '(((()())', '((())())', '())))(', ')()(((((()', ')((())((((', '))()((((', '(()(())())', '(((()))())', ')()((()(()', ')()((((())', '((()()())(', '(())(())()', '()', '(((())))((', '((()()(()(', '(())()(())', '(()()(()', ')()()()))(', '()(()())', '()(())', '(()(()))', '()))()(()(', '(()((())))', '(()(((((', '(()(())(()', ')()())((((', '(())((())(', '(()(())(', '((())())()', '()(()(((', '(((())))', '((()(())((', '()((()()', '(())()', ')))))))(()', '(()(((()', '()()(())', '(()()()())', '((())(()))', '(()((())))', '))())()(', '(()(()((()', '()((((()()', ')()())(())', '))))((()()', ')()())))()', '(())(())', '((()()))()', '()()()', '((()()(()(', '(()()(()))', '(()())()', '()()((()()', '()(())((((', '(()())', '()))()((', '))))()(())', '(()(()()))', '())()()(', '())()())))', '(()))))(()', '((((()))))', '))())(()', '()(()())()', '()((()))', '(((())))', '())))())((', '(()())()))', '(()()()(((', ')((((((()(', ')()))(()((', '(())', '(((())))', '(((())))()', '()()))))((', '()()((()', '((()))()()', '())()))(()', '(()((())', '((()', '(()(())(()', '((()(())))', '))()))((((', ')((())(())', '(())(()(((', '(((())()))', '()()()(())', ')()))(()', '((())(()))', '(()()(()()', '()())()(()', '((())(()))', '()(()())', '((((())))(', '((()()((()', '(((())()((', '(())(()()(', '))()))', ')()())(()(', '))()))()))', '(())())(()', ')))()))())', ')(())((()(', ')())))((((', ')())))))((', '()(()())()', '()', '(()(()((((', '(()((())))', '(()(()))', '(((((((())', '((()))', '((()()', '()((((()))', ')((()())))', '()(()())((', '))))()()((', '(((())))', '()()(()())', '()()(())()', '(()()())()', '))()())(()', '()((()))', '()((((', '(()((())))', '()()(((())', '(())(()))(', '((()))()', '()((()((((', '(())((()))', '((((()))))', '(())(())', ')()(())(', '())()((())', '(((()(()))', '()(())()()', '()(())', '(())()', '((()())())', '()()((()', '(())(())', '(()()())()', ')(((()))((', '((()((((', '))((()((((', '()()()()', ')))()())()', ')(()()', '())))()()(', ')())((((', '()', '()(())', '(()(((()))', '(())()()()', ')())))(())', '()((()(()(', '()(()())', '()())())()', '()(()()(()', '()()()', '(((()()))(', '((()))(())', '()()())(()', '((()))((()']
incorrect guesses in testing = []
////////////////////////////////////////
TEST short
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
test accuracy = 100.0%
confusion matrix for test set = 
tensor([[305.,   0.,   0.],
        [  0., 304.,   0.],
        [  0.,   0., 304.]])
correct guesses in testing = ['(((((((()(', '(()(()())(', '(((((())))', '()(()((())', '(())()()()', '((()))()', '(((())()((', '()())(', '(((())))', '((())()()(', ')()())()', '())()(((((', '((()()))()', ')((()(()((', '())))(((()', '()((())(', '(()(()()))', '((()))()()', '((((()))))', '(((()())()', '(())(())((', '((())())()', ')))((((()(', '()(()(()((', '(()(())())', '(((()()())', '(()((())((', '))()()()()', '(())()()', ')()((()))(', '()()(())', '))((((((', '()((()()))', ')))())(()(', '(()())))', '()(()(()))', ')()()))()(', '((()()((', '(())(())((', '((()(()(()', '()(()(()((', '()()()()', '(()(', ')()()))(()', '((())())()', '()()()(())', '((())(())(', '((()()))()', '()(())((()', '(()((())))', '(((((()()(', '(()(((((', '()((((()()', '()(((()(()', '()()()))))', '((())(()()', '()(()())()', ')()())))))', '(())((()))', '((()))(())', '))(())))()', '((()()())(', '()()((())(', '))(((((()(', '()(()()())', '()))())())', '(())(()())', '(()(()))()', ')))()))(', '(()))))())', '()(())((()', '((())())', '))())()))(', ')(()))((', '(())()()()', '(()(((()()', '())())())(', '(()()())()', ')))))))())', '()()))((', '((())((()(', '((()())())', '()(((((())', '()()((((', ')(())(((', '()()()()()', '()()(()())', ')(())(()()', '(()))((())', ')(()(()()(', '()(()(()((', '()((()))()', '(()())()((', ')())(((()(', '((((()()', '))))()))((', '(((()(())(', '()()())))(', '()(()(()', '()()((((()', '(()()(()))', '(((()(()))', ')))))()()(', '((()((()))', '(((()))())', '(()((((()(', '(()()()()(', '(()(())())', '((()))', '(((((()))(', '()(())(())', '())())(()(', '(())((()))', '()(()(()', '()(()()(', '((()))()()', ')))((()(((', '(()()(()((', '()((())())', '()(((()()(', '))()((()()', ')(()(((())', ')((())', '()(())()()', '(()(((', '()()()()()', '(((())(()(', '()((()))()', '))()()((()', ')())))))))', ')(()())())', '(()(((()', ')())()()', '()()((', '(()())(())', '(()()(())(', '))(((()(((', ')))(()()()', '))(()(()))', ')))(()((((', ')))))()())', '(())(()(', '((()(((()(', '())))(((((', '()(()()))(', '()((()(())', '()(((())', ')((()(((((', '(()(()()', '(())(())', '((()))((((', '((()(((())', '(((()((())', '((()()))()', ')((())((()', '(()((()(', '(((()())))', '(())()', '((())((()(', '(((()))())', '(())(((()(', '(()())', '((((())())', '(((())()()', '()()()))', '((())()(', '()()((()()', '()(((())))', '(()()()(()', '((((((((', '))((()()))', '()()((()))', '((())())))', '((())()())', '((()(()))(', ')(()()()((', ')(()((((()', '()())()()(', '()((((((', '())(()((()', '(((()))())', '(((((()))(', '((()(((())', '(()()()())', '))())(()((', '()))(()(()', '(())()(())', '()()(())()', '()()(()(', '(((()())))', '))))))(())', '()(()(()((', ')())))((', '()((()))()', ')))()()()(', '((())(()))', '(((((())()', '())(()))))', '()(()())()', '))))())(()', '(()(()', '(()(())()(', '(((())))', '()((()))()', '(((())((', '(())((', '(())))()((', '(()((())()', '(())', ')())((()', '())(())(((', ')))(((((()', '()()))(())', '((())((())', '()()))()))', '(()((())))', '((((()((()', '((()(()(()', '((()()))()', '()(()((()(', '()()(())()', '((()(())((', ')(()(()())', '(()()(()))', '()(())', '()))(((()(', '(((()))()(', '))))))))((', '())()))(((', '(((())))', ')()()()(()', '())()())((', '((()', ')())(())((', '()(())(())', '(()(((())(', '))((())(', '())()(()))', '((()()()))', ')())()()()', ')(((', '()((()()))', '((()))()()', '(()())()((', '()))))(()(', ')((())())(', '()()()()((', '(()(()()))', '(()())()', '())(())))(', '((()))(())', ')(()(())', '))()))))()', ')((())))()', '(((()))()(', '()(())))()', '(()()())', ')))())))()', ')())((()((', '()((((()))', ')()()(()', '((())())', '()()()', '(()(((((((', '()()))())(', '(())((', '()((()()))', '((())()))(', '()((())())', ')))()(', '()((())())', ')))((()(()', '((()))()()', '((()(())((', ')))((())()', '((((()((()', '((())())()', '))(())((()', '(())', '(()((()()(', '()(()())', '(((())))', '((((())))(', '(((()(((((', '((())())', '(()()(((', ')()()(((((', '(()()()()(', '()(((())))', '((()()))', '((()))', ')(()()))', ')()())))((', '((((()))))', '()())))(((', '(((()))(((', '()(()(', '((()))', '((()(()()(', '()(()())()', '((()(())', '))))()((', '((((()((', '()()()()()', '((()(())))', '((()()()))', '((()()()()', '()(()((()(', '(())(()())', '))(()())((', '()(((((()(', '((())()())', '()((()()))', ')))())))((', '(()(((()((', '(()()(()))', ')()(((()', '((())(', '())()))))(', '(()()())((', ')())(()()(', '()()(())', ')(((((', '(((((((()(', '(((()())()', '(()(()((', '(()(())())', ')()((()(((', '((()()))()', '((()(()(()', '(()()()(', '(()(()))((', '(()(())()(', '((())(()))', '(()(()())(', '()((((((', ')())))', '())(()))()', '((((())(', '()(()(()))', '()((()))', '))())))(()', '(((())()))', '((()())())', '(((())))((', '((((()))))', '()()((()))', '((((())))(', '((()()))))', '(())((()', '()((()()((', '()', '(()))))(((', '()())())', '()(((())))', '()((()((', '(((())))', ')(((())))(', ')((()))(((', '((()(())', ')))(((', ')(()()))((', '()))))((((', '((((()', '(()()(()))', '()(())()()', '))())))(((', '())())()()', '))))(((())', ')()()())((', '((())(()', '(((()(()))', '(()((((())', '((())(((((', '(())(())', '()()((()))', '(()())()()', '(())()))', '((()()()))', ')())', '()()((((((', ')((()(()', '()(()()(()', '((())()(()', '()()()()()', '(((()(()((', '((()())(()', '))))()((()', ')()(())(()', '()(())', '(()()())', '()(()()(', '(()(((((()', '()((())(((', '())()((()(', ')()))))(()', '))(()()(((', ')))()()(((', '()(())()()', '(()()(()()', '((()))(())', ')()))()))(', '))()()', '(()((())))', '((()))()', '((()())(()', ')()))(((((', '(()()())()', '))())(((', '()()((()', '()(())()()', ')(()())(((', ')))))(()', '(()())((((', '()(()(((()', '())(((()()', '())())()))', '(())', '()()()(())', ')()(((((', '(()(()()((', '((()))()()', '()()))()((', '(((()))()(', '()(((())()', ')()())()))', '()()(((())', '((())(()', '((((())(()', '()())))())', '(((())()))', '(())(()())', '(())))))((', '(()()()())', '((())))()(', '()((((((((', '((()((', ')(()))))', '(()(((()', '()()()()()', '((((((()((', '(((()())()', '(((((())', '()(()(', '()((()))', '((())(()))', '))))))))', ')()(()))((', ')(((()()', '()()((((()', '((()))', '()((((()()', '(())()(())', '(()(()(())', '())(((()((', '((()()))()', '(())()((()', '(((()()(((', '(((())()))', '(((())((', '()()((((', '((()))))))', '((()()))', '()(()((())', '(()(()))()', '()(()(()((', '((()())()(', '()((())(()', '(()())(())', '))))())())', '())()(())(', '))((()', '()(()()()(', '(()()()())', '))))()()', '(()(((((()', '(()((())))', '))()()(()(', ')((()))(()', '((()())())', ')()(()))', '))(())()()', '())()(()()', '((((())(', ')(()))))()', '(((()))()(', '())(()))((', '(()(((())(', '())))(()))', '()()))))()', ')(((((()))', '(()()(()))', '(()(((((((', '(()(())())', '((((())())', '(()()())((', '()(((())))', '(()()(((()', '((((())(((', ')())()))()', '())))((()(', '()', '(((())', '()((()()))', '()))(()()(', '()(((())))', '(()()))()(', '(())()(())', '(((())((((', '()(()()())', '(())()((((', '())(()())(', '(()()(()', '(()()(()()', '(((())))', '()))(())()', '()()', '(())((()()', '(()()(()', '((()()', '(()(((((', '((()))))()', '(()())()()', '()((())())', '()(()())()', '()(()()())', ')(()(()))(', '((()())(()', '()((()))()', '(()(())(((', '((())())()', '))()((((()', '()()(((()(', '(()())(()(', '(()()(())(', '((()(())))', '((())))(', ')(((()))()', '(((()(((', '()()()(())', '(()((())))', '((())())()', '(()())(()(', '(()())()()', '((()))()', '()((())())', '()((()', '(())((()()', '()()((((()', '((()))((', '((()))(())', '(()(()(()(', '(()())', '(((())()((', '())))()(()', ')()))())))', '(()(())(((', '()())()(((', '(((()())))', '(((())()))', '((()())())', '()(()())', ')))))()(((', '((()))()()', '((()())())', '(((())))', '()()()()))', ')()()(', '))())())()', '()()((())(', '()(())', '()))', '(()(())())', '(()()())()', '((()(())((', '(((((()())', ')))))(((', ')())(((())', '((()()))((', '(())()(())', '(())(())((', '()(())(())', ')))()()(', ')()())', ')()()())', '()()(()(()', '()()(())', ')))()()())', ')((()()(((', '(()(((()', '()()((((', '()))((', '()(()())))', '()(())((', '()((()))()', '((()()(())', '))()()((((', '((())(()))', ')))())()', '((())(()))', '((()(()))(', '(()())', '()()()((', '))(((((())', '()))(()())', '())()(()', '()(((())))', ')))(()))))', ')())(())', '((())()(()', '(())(()(()', '(()(()))()', ')))(()((()', '()(()(()))', ')()((())))', '()(())))((', '()(()()())', '(()()()()(', '))()()())(', '))(()())()', '))((((((()', '((()()(())', '(())(()(((', '())()())()', ')))))()))(', '(()(())())', '())()(()((', '()(()()())', ')(((()()))', '))()))(())', '()()))((()', '((())())()', '()())())((', '))((((()', '))((((())(', '()))()()))', '))((', ')(()()())(', '()()((((()', '(((()(())(', ')))((()()(', '()())(((', '((()()(())', '))(())((', '()((()))()', '()()()()', '(((()())))', '(((())))()', '(((())()()', '(()()()())', '((())(', '()()()', '(())((', '()(((()(', '((()(())', '((()()((()', '((()(())((', '(())(()())', '()()()((((', '((())(((', '((())())', '()))()))', '(()())', ')(())())', '()(((())', '()()()()((', '()()(())', '()(()()())', '()((()))', '))(())()', '()((()', '())((()()(', '(()(((()((', '))(()))))(', '(()())', ')))(((((', '()(()())()', '((()))(())', ')((())()', '((()(())))', '(((((()(', '(()())()()', '((()(()())', '(((((((())', '(((()(()()', '(((()))(((', '()()', '(((()(((', '(())(()(()', ')(()))((()', '(()((())', '()(())()', '(())(())', '()()(((())', '()()(()())', '(()(((())(', '()()(())', '()()()((()', ')))))))()(', '))()()()))', '(((()()())', '(()())()()', '(()()()())', ')))()((())', '(()(()()))', '(())()', '()(()(', '()(()(', ')(()()))()', ')(()((()))', '(()())', '()((())())', '()((()()((', '))))(())()', '((()()))', ')((()())', '(()((()))(', '(())()(())', ')))())()((', '((()())())', '))))())(((', ')()()()(((', '))()((()))', ')((()(((', '())(()', '(((())())(', '((())())()', '()(()(()))', '((())())', '(()(()))()', '(((()))))(', '()(((()()(', ')((()((()(', '(())', '(((())))', '(()()()(()', ')())(()(', '((())((()(', '((((()(())', ')))()))(((', '(((()())))', '()()(()())', '()((()()((', '()(()(()))', '((()))(())', '((((()()))', '((())())()', ')()())()()', '))))()))', '(((()())', '((())())', '())))(', ')()(((((()', ')((())((((', '))()((((', '(()(())())', '(((()))())', ')()((()(()', ')()((((())', '((()()())(', '(())(())()', '()', '(((())))((', '((()()(()(', '(())()(())', '(()()(()', ')()()()))(', '()(()())', '()(())', '(()(()))', '()))()(()(', '(()((())))', '(()(((((', '(()(())(()', ')()())((((', '(())((())(', '(()(())(', '((())())()', '()(()(((', '(((())))', '((()(())((', '()((()()', '(())()', ')))))))(()', '(()(((()', '()()(())', '(()()()())', '((())(()))', '(()((())))', '))())()(', '(()(()((()', '()((((()()', ')()())(())', '))))((()()', ')()())))()', '(())(())', '((()()))()', '()()()', '((()()(()(', '(()()(()))', '(()())()', '()()((()()', '()(())((((', '(()())', '()))()((', '))))()(())', '(()(()()))', '())()()(', '())()())))', '(()))))(()', '((((()))))', '))())(()', '()(()())()', '()((()))', '(((())))', '())))())((', '(()())()))', '(()()()(((', ')((((((()(', ')()))(()((', '(())', '(((())))', '(((())))()', '()()))))((', '()()((()', '((()))()()', '())()))(()', '(()((())', '((()', '(()(())(()', '((()(())))', '))()))((((', ')((())(())', '(())(()(((', '(((())()))', '()()()(())', ')()))(()', '((())(()))', '(()()(()()', '()())()(()', '((())(()))', '()(()())', '((((())))(', '((()()((()', '(((())()((', '(())(()()(', '))()))', ')()())(()(', '))()))()))', '(())())(()', ')))()))())', ')(())((()(', ')())))((((', ')())))))((', '()(()())()', '()', '(()(()((((', '(()((())))', '(()(()))', '(((((((())', '((()))', '((()()', '()((((()))', ')((()())))', '()(()())((', '))))()()((', '(((())))', '()()(()())', '()()(())()', '(()()())()', '))()())(()', '()((()))', '()((((', '(()((())))', '()()(((())', '(())(()))(', '((()))()', '()((()((((', '(())((()))', '((((()))))', '(())(())', ')()(())(', '())()((())', '(((()(()))', '()(())()()', '()(())', '(())()', '((()())())', '()()((()', '(())(())', '(()()())()', ')(((()))((', '((()((((', '))((()((((', '()()()()', ')))()())()', ')(()()', '())))()()(', ')())((((', '()', '()(())', '(()(((()))', '(())()()()', ')())))(())', '()((()(()(', '()(()())', '()())())()', '()(()()(()', '()()()', '(((()()))(', '((()))(())', '()()())(()', '((()))((()']
incorrect guesses in testing = []
////////////////////////////////////////
TEST short
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
test accuracy = 99.89047097480832%
confusion matrix for test set = 
tensor([[305.,   0.,   0.],
        [  0., 304.,   0.],
        [  0.,   1., 303.]])
correct guesses in testing = ['(((((((()(', '(()(()())(', '(((((())))', '()(()((())', '(())()()()', '((()))()', '(((())()((', '()())(', '(((())))', '((())()()(', ')()())()', '())()(((((', '((()()))()', ')((()(()((', '())))(((()', '()((())(', '(()(()()))', '((()))()()', '((((()))))', '(((()())()', '(())(())((', '((())())()', ')))((((()(', '()(()(()((', '(()(())())', '(((()()())', '(()((())((', '))()()()()', '(())()()', ')()((()))(', '()()(())', '))((((((', '()((()()))', ')))())(()(', '(()())))', '()(()(()))', ')()()))()(', '((()()((', '(())(())((', '((()(()(()', '()(()(()((', '()()()()', '(()(', ')()()))(()', '((())())()', '()()()(())', '((())(())(', '((()()))()', '()(())((()', '(()((())))', '(((((()()(', '(()(((((', '()((((()()', '()(((()(()', '()()()))))', '((())(()()', '()(()())()', ')()())))))', '(())((()))', '((()))(())', '))(())))()', '((()()())(', '()()((())(', '))(((((()(', '()(()()())', '()))())())', '(())(()())', '(()(()))()', ')))()))(', '(()))))())', '()(())((()', '((())())', '))())()))(', ')(()))((', '(())()()()', '(()(((()()', '())())())(', '(()()())()', ')))))))())', '()()))((', '((())((()(', '((()())())', '()(((((())', '()()((((', ')(())(((', '()()()()()', '()()(()())', ')(())(()()', '(()))((())', ')(()(()()(', '()(()(()((', '()((()))()', '(()())()((', ')())(((()(', '((((()()', '))))()))((', '(((()(())(', '()()())))(', '()(()(()', '()()((((()', '(()()(()))', '(((()(()))', ')))))()()(', '((()((()))', '(((()))())', '(()((((()(', '(()()()()(', '(()(())())', '((()))', '(((((()))(', '()(())(())', '())())(()(', '(())((()))', '()(()(()', '()(()()(', '((()))()()', ')))((()(((', '(()()(()((', '()((())())', '()(((()()(', '))()((()()', ')(()(((())', ')((())', '()(())()()', '(()(((', '()()()()()', '(((())(()(', '()((()))()', '))()()((()', ')())))))))', ')(()())())', '(()(((()', ')())()()', '()()((', '(()())(())', '(()()(())(', '))(((()(((', ')))(()()()', '))(()(()))', ')))(()((((', ')))))()())', '(())(()(', '((()(((()(', '())))(((((', '()(()()))(', '()((()(())', '()(((())', '(()(()()', '(())(())', '((()))((((', '((()(((())', '(((()((())', '((()()))()', ')((())((()', '(()((()(', '(((()())))', '(())()', '((())((()(', '(((()))())', '(())(((()(', '(()())', '((((())())', '(((())()()', '()()()))', '((())()(', '()()((()()', '()(((())))', '(()()()(()', '((((((((', '))((()()))', '()()((()))', '((())())))', '((())()())', '((()(()))(', ')(()()()((', ')(()((((()', '()())()()(', '()((((((', '())(()((()', '(((()))())', '(((((()))(', '((()(((())', '(()()()())', '))())(()((', '()))(()(()', '(())()(())', '()()(())()', '()()(()(', '(((()())))', '))))))(())', '()(()(()((', ')())))((', '()((()))()', ')))()()()(', '((())(()))', '(((((())()', '())(()))))', '()(()())()', '))))())(()', '(()(()', '(()(())()(', '(((())))', '()((()))()', '(((())((', '(())((', '(())))()((', '(()((())()', '(())', ')())((()', '())(())(((', ')))(((((()', '()()))(())', '((())((())', '()()))()))', '(()((())))', '((((()((()', '((()(()(()', '((()()))()', '()(()((()(', '()()(())()', '((()(())((', ')(()(()())', '(()()(()))', '()(())', '()))(((()(', '(((()))()(', '))))))))((', '())()))(((', '(((())))', ')()()()(()', '())()())((', '((()', ')())(())((', '()(())(())', '(()(((())(', '))((())(', '())()(()))', '((()()()))', ')())()()()', ')(((', '()((()()))', '((()))()()', '(()())()((', '()))))(()(', ')((())())(', '()()()()((', '(()(()()))', '(()())()', '())(())))(', '((()))(())', ')(()(())', '))()))))()', ')((())))()', '(((()))()(', '()(())))()', '(()()())', ')))())))()', ')())((()((', '()((((()))', ')()()(()', '((())())', '()()()', '(()(((((((', '()()))())(', '(())((', '()((()()))', '((())()))(', '()((())())', ')))()(', '()((())())', ')))((()(()', '((()))()()', '((()(())((', ')))((())()', '((((()((()', '((())())()', '))(())((()', '(())', '(()((()()(', '()(()())', '(((())))', '((((())))(', '(((()(((((', '((())())', '(()()(((', ')()()(((((', '(()()()()(', '()(((())))', '((()()))', '((()))', ')(()()))', ')()())))((', '((((()))))', '()())))(((', '(((()))(((', '()(()(', '((()))', '((()(()()(', '()(()())()', '((()(())', '))))()((', '((((()((', '()()()()()', '((()(())))', '((()()()))', '((()()()()', '()(()((()(', '(())(()())', '))(()())((', '()(((((()(', '((())()())', '()((()()))', ')))())))((', '(()(((()((', '(()()(()))', ')()(((()', '((())(', '())()))))(', '(()()())((', ')())(()()(', '()()(())', ')(((((', '(((((((()(', '(((()())()', '(()(()((', '(()(())())', ')()((()(((', '((()()))()', '((()(()(()', '(()()()(', '(()(()))((', '(()(())()(', '((())(()))', '(()(()())(', '()((((((', ')())))', '())(()))()', '((((())(', '()(()(()))', '()((()))', '))())))(()', '(((())()))', '((()())())', '(((())))((', '((((()))))', '()()((()))', '((((())))(', '((()()))))', '(())((()', '()((()()((', '()', '(()))))(((', '()())())', '()(((())))', '()((()((', '(((())))', ')(((())))(', ')((()))(((', '((()(())', ')))(((', ')(()()))((', '()))))((((', '((((()', '(()()(()))', '()(())()()', '))())))(((', '())())()()', '))))(((())', ')()()())((', '((())(()', '(((()(()))', '(()((((())', '((())(((((', '(())(())', '()()((()))', '(()())()()', '(())()))', '((()()()))', ')())', '()()((((((', ')((()(()', '()(()()(()', '((())()(()', '()()()()()', '(((()(()((', '((()())(()', '))))()((()', ')()(())(()', '()(())', '(()()())', '()(()()(', '(()(((((()', '()((())(((', '())()((()(', ')()))))(()', '))(()()(((', ')))()()(((', '()(())()()', '(()()(()()', '((()))(())', ')()))()))(', '))()()', '(()((())))', '((()))()', '((()())(()', ')()))(((((', '(()()())()', '))())(((', '()()((()', '()(())()()', ')(()())(((', ')))))(()', '(()())((((', '()(()(((()', '())(((()()', '())())()))', '(())', '()()()(())', ')()(((((', '(()(()()((', '((()))()()', '()()))()((', '(((()))()(', '()(((())()', ')()())()))', '()()(((())', '((())(()', '((((())(()', '()())))())', '(((())()))', '(())(()())', '(())))))((', '(()()()())', '((())))()(', '()((((((((', '((()((', ')(()))))', '(()(((()', '()()()()()', '((((((()((', '(((()())()', '(((((())', '()(()(', '()((()))', '((())(()))', '))))))))', ')()(()))((', ')(((()()', '()()((((()', '((()))', '()((((()()', '(())()(())', '(()(()(())', '())(((()((', '((()()))()', '(())()((()', '(((()()(((', '(((())()))', '(((())((', '()()((((', '((()))))))', '((()()))', '()(()((())', '(()(()))()', '()(()(()((', '((()())()(', '()((())(()', '(()())(())', '))))())())', '())()(())(', '))((()', '()(()()()(', '(()()()())', '))))()()', '(()(((((()', '(()((())))', '))()()(()(', ')((()))(()', '((()())())', ')()(()))', '))(())()()', '())()(()()', '((((())(', ')(()))))()', '(((()))()(', '())(()))((', '(()(((())(', '())))(()))', '()()))))()', ')(((((()))', '(()()(()))', '(()(((((((', '(()(())())', '((((())())', '(()()())((', '()(((())))', '(()()(((()', '((((())(((', ')())()))()', '())))((()(', '()', '(((())', '()((()()))', '()))(()()(', '()(((())))', '(()()))()(', '(())()(())', '(((())((((', '()(()()())', '(())()((((', '())(()())(', '(()()(()', '(()()(()()', '(((())))', '()))(())()', '()()', '(())((()()', '(()()(()', '((()()', '(()(((((', '((()))))()', '(()())()()', '()((())())', '()(()())()', '()(()()())', ')(()(()))(', '((()())(()', '()((()))()', '(()(())(((', '((())())()', '))()((((()', '()()(((()(', '(()())(()(', '(()()(())(', '((()(())))', '((())))(', ')(((()))()', '(((()(((', '()()()(())', '(()((())))', '((())())()', '(()())(()(', '(()())()()', '((()))()', '()((())())', '()((()', '(())((()()', '()()((((()', '((()))((', '((()))(())', '(()(()(()(', '(()())', '(((())()((', '())))()(()', ')()))())))', '(()(())(((', '()())()(((', '(((()())))', '(((())()))', '((()())())', '()(()())', ')))))()(((', '((()))()()', '((()())())', '(((())))', '()()()()))', ')()()(', '))())())()', '()()((())(', '()(())', '()))', '(()(())())', '(()()())()', '((()(())((', '(((((()())', ')))))(((', ')())(((())', '((()()))((', '(())()(())', '(())(())((', '()(())(())', ')))()()(', ')()())', ')()()())', '()()(()(()', '()()(())', ')))()()())', ')((()()(((', '(()(((()', '()()((((', '()))((', '()(()())))', '()(())((', '()((()))()', '((()()(())', '))()()((((', '((())(()))', ')))())()', '((())(()))', '((()(()))(', '(()())', '()()()((', '))(((((())', '()))(()())', '())()(()', '()(((())))', ')))(()))))', ')())(())', '((())()(()', '(())(()(()', '(()(()))()', ')))(()((()', '()(()(()))', ')()((())))', '()(())))((', '()(()()())', '(()()()()(', '))()()())(', '))(()())()', '))((((((()', '((()()(())', '(())(()(((', '())()())()', ')))))()))(', '(()(())())', '())()(()((', '()(()()())', ')(((()()))', '))()))(())', '()()))((()', '((())())()', '()())())((', '))((((()', '))((((())(', '()))()()))', '))((', ')(()()())(', '()()((((()', '(((()(())(', ')))((()()(', '()())(((', '((()()(())', '))(())((', '()((()))()', '()()()()', '(((()())))', '(((())))()', '(((())()()', '(()()()())', '((())(', '()()()', '(())((', '()(((()(', '((()(())', '((()()((()', '((()(())((', '(())(()())', '()()()((((', '((())(((', '((())())', '()))()))', '(()())', ')(())())', '()(((())', '()()()()((', '()()(())', '()(()()())', '()((()))', '))(())()', '()((()', '())((()()(', '(()(((()((', '))(()))))(', '(()())', ')))(((((', '()(()())()', '((()))(())', ')((())()', '((()(())))', '(((((()(', '(()())()()', '((()(()())', '(((((((())', '(((()(()()', '(((()))(((', '()()', '(((()(((', '(())(()(()', ')(()))((()', '(()((())', '()(())()', '(())(())', '()()(((())', '()()(()())', '(()(((())(', '()()(())', '()()()((()', ')))))))()(', '))()()()))', '(((()()())', '(()())()()', '(()()()())', ')))()((())', '(()(()()))', '(())()', '()(()(', '()(()(', ')(()()))()', ')(()((()))', '(()())', '()((())())', '()((()()((', '))))(())()', '((()()))', ')((()())', '(()((()))(', '(())()(())', ')))())()((', '((()())())', '))))())(((', ')()()()(((', '))()((()))', ')((()(((', '())(()', '(((())())(', '((())())()', '()(()(()))', '((())())', '(()(()))()', '(((()))))(', '()(((()()(', ')((()((()(', '(())', '(((())))', '(()()()(()', ')())(()(', '((())((()(', '((((()(())', ')))()))(((', '(((()())))', '()()(()())', '()((()()((', '()(()(()))', '((()))(())', '((((()()))', '((())())()', ')()())()()', '))))()))', '(((()())', '((())())', '())))(', ')()(((((()', ')((())((((', '))()((((', '(()(())())', '(((()))())', ')()((()(()', ')()((((())', '((()()())(', '(())(())()', '()', '(((())))((', '((()()(()(', '(())()(())', '(()()(()', ')()()()))(', '()(()())', '()(())', '(()(()))', '()))()(()(', '(()((())))', '(()(((((', '(()(())(()', ')()())((((', '(())((())(', '(()(())(', '((())())()', '()(()(((', '(((())))', '((()(())((', '()((()()', '(())()', ')))))))(()', '(()(((()', '()()(())', '(()()()())', '((())(()))', '(()((())))', '))())()(', '(()(()((()', '()((((()()', ')()())(())', '))))((()()', ')()())))()', '(())(())', '((()()))()', '()()()', '((()()(()(', '(()()(()))', '(()())()', '()()((()()', '()(())((((', '(()())', '()))()((', '))))()(())', '(()(()()))', '())()()(', '())()())))', '(()))))(()', '((((()))))', '))())(()', '()(()())()', '()((()))', '(((())))', '())))())((', '(()())()))', '(()()()(((', ')((((((()(', ')()))(()((', '(())', '(((())))', '(((())))()', '()()))))((', '()()((()', '((()))()()', '())()))(()', '(()((())', '((()', '(()(())(()', '((()(())))', '))()))((((', ')((())(())', '(())(()(((', '(((())()))', '()()()(())', ')()))(()', '((())(()))', '(()()(()()', '()())()(()', '((())(()))', '()(()())', '((((())))(', '((()()((()', '(((())()((', '(())(()()(', '))()))', ')()())(()(', '))()))()))', '(())())(()', ')))()))())', ')(())((()(', ')())))((((', ')())))))((', '()(()())()', '()', '(()(()((((', '(()((())))', '(()(()))', '(((((((())', '((()))', '((()()', '()((((()))', ')((()())))', '()(()())((', '))))()()((', '(((())))', '()()(()())', '()()(())()', '(()()())()', '))()())(()', '()((()))', '()((((', '(()((())))', '()()(((())', '(())(()))(', '((()))()', '()((()((((', '(())((()))', '((((()))))', '(())(())', ')()(())(', '())()((())', '(((()(()))', '()(())()()', '()(())', '(())()', '((()())())', '()()((()', '(())(())', '(()()())()', ')(((()))((', '((()((((', '))((()((((', '()()()()', ')))()())()', ')(()()', '())))()()(', ')())((((', '()', '()(())', '(()(((()))', '(())()()()', ')())))(())', '()((()(()(', '()(()())', '()())())()', '()(()()(()', '()()()', '(((()()))(', '((()))(())', '()()())(()', '((()))((()']
incorrect guesses in testing = [')((()(((((']
////////////////////////////////////////
TEST short
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = valid
actual class = valid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = invalid
actual class = invalid
/////////////////////////////////////////////
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([1., 0.], requires_grad=True)
input tensor[j][0] = tensor([0., 1.], requires_grad=True)
predicted class = incomplete
actual class = incomplete
test accuracy = 100.0%
confusion matrix for test set = 
tensor([[305.,   0.,   0.],
        [  0., 304.,   0.],
        [  0.,   0., 304.]])
correct guesses in testing = ['(((((((()(', '(()(()())(', '(((((())))', '()(()((())', '(())()()()', '((()))()', '(((())()((', '()())(', '(((())))', '((())()()(', ')()())()', '())()(((((', '((()()))()', ')((()(()((', '())))(((()', '()((())(', '(()(()()))', '((()))()()', '((((()))))', '(((()())()', '(())(())((', '((())())()', ')))((((()(', '()(()(()((', '(()(())())', '(((()()())', '(()((())((', '))()()()()', '(())()()', ')()((()))(', '()()(())', '))((((((', '()((()()))', ')))())(()(', '(()())))', '()(()(()))', ')()()))()(', '((()()((', '(())(())((', '((()(()(()', '()(()(()((', '()()()()', '(()(', ')()()))(()', '((())())()', '()()()(())', '((())(())(', '((()()))()', '()(())((()', '(()((())))', '(((((()()(', '(()(((((', '()((((()()', '()(((()(()', '()()()))))', '((())(()()', '()(()())()', ')()())))))', '(())((()))', '((()))(())', '))(())))()', '((()()())(', '()()((())(', '))(((((()(', '()(()()())', '()))())())', '(())(()())', '(()(()))()', ')))()))(', '(()))))())', '()(())((()', '((())())', '))())()))(', ')(()))((', '(())()()()', '(()(((()()', '())())())(', '(()()())()', ')))))))())', '()()))((', '((())((()(', '((()())())', '()(((((())', '()()((((', ')(())(((', '()()()()()', '()()(()())', ')(())(()()', '(()))((())', ')(()(()()(', '()(()(()((', '()((()))()', '(()())()((', ')())(((()(', '((((()()', '))))()))((', '(((()(())(', '()()())))(', '()(()(()', '()()((((()', '(()()(()))', '(((()(()))', ')))))()()(', '((()((()))', '(((()))())', '(()((((()(', '(()()()()(', '(()(())())', '((()))', '(((((()))(', '()(())(())', '())())(()(', '(())((()))', '()(()(()', '()(()()(', '((()))()()', ')))((()(((', '(()()(()((', '()((())())', '()(((()()(', '))()((()()', ')(()(((())', ')((())', '()(())()()', '(()(((', '()()()()()', '(((())(()(', '()((()))()', '))()()((()', ')())))))))', ')(()())())', '(()(((()', ')())()()', '()()((', '(()())(())', '(()()(())(', '))(((()(((', ')))(()()()', '))(()(()))', ')))(()((((', ')))))()())', '(())(()(', '((()(((()(', '())))(((((', '()(()()))(', '()((()(())', '()(((())', ')((()(((((', '(()(()()', '(())(())', '((()))((((', '((()(((())', '(((()((())', '((()()))()', ')((())((()', '(()((()(', '(((()())))', '(())()', '((())((()(', '(((()))())', '(())(((()(', '(()())', '((((())())', '(((())()()', '()()()))', '((())()(', '()()((()()', '()(((())))', '(()()()(()', '((((((((', '))((()()))', '()()((()))', '((())())))', '((())()())', '((()(()))(', ')(()()()((', ')(()((((()', '()())()()(', '()((((((', '())(()((()', '(((()))())', '(((((()))(', '((()(((())', '(()()()())', '))())(()((', '()))(()(()', '(())()(())', '()()(())()', '()()(()(', '(((()())))', '))))))(())', '()(()(()((', ')())))((', '()((()))()', ')))()()()(', '((())(()))', '(((((())()', '())(()))))', '()(()())()', '))))())(()', '(()(()', '(()(())()(', '(((())))', '()((()))()', '(((())((', '(())((', '(())))()((', '(()((())()', '(())', ')())((()', '())(())(((', ')))(((((()', '()()))(())', '((())((())', '()()))()))', '(()((())))', '((((()((()', '((()(()(()', '((()()))()', '()(()((()(', '()()(())()', '((()(())((', ')(()(()())', '(()()(()))', '()(())', '()))(((()(', '(((()))()(', '))))))))((', '())()))(((', '(((())))', ')()()()(()', '())()())((', '((()', ')())(())((', '()(())(())', '(()(((())(', '))((())(', '())()(()))', '((()()()))', ')())()()()', ')(((', '()((()()))', '((()))()()', '(()())()((', '()))))(()(', ')((())())(', '()()()()((', '(()(()()))', '(()())()', '())(())))(', '((()))(())', ')(()(())', '))()))))()', ')((())))()', '(((()))()(', '()(())))()', '(()()())', ')))())))()', ')())((()((', '()((((()))', ')()()(()', '((())())', '()()()', '(()(((((((', '()()))())(', '(())((', '()((()()))', '((())()))(', '()((())())', ')))()(', '()((())())', ')))((()(()', '((()))()()', '((()(())((', ')))((())()', '((((()((()', '((())())()', '))(())((()', '(())', '(()((()()(', '()(()())', '(((())))', '((((())))(', '(((()(((((', '((())())', '(()()(((', ')()()(((((', '(()()()()(', '()(((())))', '((()()))', '((()))', ')(()()))', ')()())))((', '((((()))))', '()())))(((', '(((()))(((', '()(()(', '((()))', '((()(()()(', '()(()())()', '((()(())', '))))()((', '((((()((', '()()()()()', '((()(())))', '((()()()))', '((()()()()', '()(()((()(', '(())(()())', '))(()())((', '()(((((()(', '((())()())', '()((()()))', ')))())))((', '(()(((()((', '(()()(()))', ')()(((()', '((())(', '())()))))(', '(()()())((', ')())(()()(', '()()(())', ')(((((', '(((((((()(', '(((()())()', '(()(()((', '(()(())())', ')()((()(((', '((()()))()', '((()(()(()', '(()()()(', '(()(()))((', '(()(())()(', '((())(()))', '(()(()())(', '()((((((', ')())))', '())(()))()', '((((())(', '()(()(()))', '()((()))', '))())))(()', '(((())()))', '((()())())', '(((())))((', '((((()))))', '()()((()))', '((((())))(', '((()()))))', '(())((()', '()((()()((', '()', '(()))))(((', '()())())', '()(((())))', '()((()((', '(((())))', ')(((())))(', ')((()))(((', '((()(())', ')))(((', ')(()()))((', '()))))((((', '((((()', '(()()(()))', '()(())()()', '))())))(((', '())())()()', '))))(((())', ')()()())((', '((())(()', '(((()(()))', '(()((((())', '((())(((((', '(())(())', '()()((()))', '(()())()()', '(())()))', '((()()()))', ')())', '()()((((((', ')((()(()', '()(()()(()', '((())()(()', '()()()()()', '(((()(()((', '((()())(()', '))))()((()', ')()(())(()', '()(())', '(()()())', '()(()()(', '(()(((((()', '()((())(((', '())()((()(', ')()))))(()', '))(()()(((', ')))()()(((', '()(())()()', '(()()(()()', '((()))(())', ')()))()))(', '))()()', '(()((())))', '((()))()', '((()())(()', ')()))(((((', '(()()())()', '))())(((', '()()((()', '()(())()()', ')(()())(((', ')))))(()', '(()())((((', '()(()(((()', '())(((()()', '())())()))', '(())', '()()()(())', ')()(((((', '(()(()()((', '((()))()()', '()()))()((', '(((()))()(', '()(((())()', ')()())()))', '()()(((())', '((())(()', '((((())(()', '()())))())', '(((())()))', '(())(()())', '(())))))((', '(()()()())', '((())))()(', '()((((((((', '((()((', ')(()))))', '(()(((()', '()()()()()', '((((((()((', '(((()())()', '(((((())', '()(()(', '()((()))', '((())(()))', '))))))))', ')()(()))((', ')(((()()', '()()((((()', '((()))', '()((((()()', '(())()(())', '(()(()(())', '())(((()((', '((()()))()', '(())()((()', '(((()()(((', '(((())()))', '(((())((', '()()((((', '((()))))))', '((()()))', '()(()((())', '(()(()))()', '()(()(()((', '((()())()(', '()((())(()', '(()())(())', '))))())())', '())()(())(', '))((()', '()(()()()(', '(()()()())', '))))()()', '(()(((((()', '(()((())))', '))()()(()(', ')((()))(()', '((()())())', ')()(()))', '))(())()()', '())()(()()', '((((())(', ')(()))))()', '(((()))()(', '())(()))((', '(()(((())(', '())))(()))', '()()))))()', ')(((((()))', '(()()(()))', '(()(((((((', '(()(())())', '((((())())', '(()()())((', '()(((())))', '(()()(((()', '((((())(((', ')())()))()', '())))((()(', '()', '(((())', '()((()()))', '()))(()()(', '()(((())))', '(()()))()(', '(())()(())', '(((())((((', '()(()()())', '(())()((((', '())(()())(', '(()()(()', '(()()(()()', '(((())))', '()))(())()', '()()', '(())((()()', '(()()(()', '((()()', '(()(((((', '((()))))()', '(()())()()', '()((())())', '()(()())()', '()(()()())', ')(()(()))(', '((()())(()', '()((()))()', '(()(())(((', '((())())()', '))()((((()', '()()(((()(', '(()())(()(', '(()()(())(', '((()(())))', '((())))(', ')(((()))()', '(((()(((', '()()()(())', '(()((())))', '((())())()', '(()())(()(', '(()())()()', '((()))()', '()((())())', '()((()', '(())((()()', '()()((((()', '((()))((', '((()))(())', '(()(()(()(', '(()())', '(((())()((', '())))()(()', ')()))())))', '(()(())(((', '()())()(((', '(((()())))', '(((())()))', '((()())())', '()(()())', ')))))()(((', '((()))()()', '((()())())', '(((())))', '()()()()))', ')()()(', '))())())()', '()()((())(', '()(())', '()))', '(()(())())', '(()()())()', '((()(())((', '(((((()())', ')))))(((', ')())(((())', '((()()))((', '(())()(())', '(())(())((', '()(())(())', ')))()()(', ')()())', ')()()())', '()()(()(()', '()()(())', ')))()()())', ')((()()(((', '(()(((()', '()()((((', '()))((', '()(()())))', '()(())((', '()((()))()', '((()()(())', '))()()((((', '((())(()))', ')))())()', '((())(()))', '((()(()))(', '(()())', '()()()((', '))(((((())', '()))(()())', '())()(()', '()(((())))', ')))(()))))', ')())(())', '((())()(()', '(())(()(()', '(()(()))()', ')))(()((()', '()(()(()))', ')()((())))', '()(())))((', '()(()()())', '(()()()()(', '))()()())(', '))(()())()', '))((((((()', '((()()(())', '(())(()(((', '())()())()', ')))))()))(', '(()(())())', '())()(()((', '()(()()())', ')(((()()))', '))()))(())', '()()))((()', '((())())()', '()())())((', '))((((()', '))((((())(', '()))()()))', '))((', ')(()()())(', '()()((((()', '(((()(())(', ')))((()()(', '()())(((', '((()()(())', '))(())((', '()((()))()', '()()()()', '(((()())))', '(((())))()', '(((())()()', '(()()()())', '((())(', '()()()', '(())((', '()(((()(', '((()(())', '((()()((()', '((()(())((', '(())(()())', '()()()((((', '((())(((', '((())())', '()))()))', '(()())', ')(())())', '()(((())', '()()()()((', '()()(())', '()(()()())', '()((()))', '))(())()', '()((()', '())((()()(', '(()(((()((', '))(()))))(', '(()())', ')))(((((', '()(()())()', '((()))(())', ')((())()', '((()(())))', '(((((()(', '(()())()()', '((()(()())', '(((((((())', '(((()(()()', '(((()))(((', '()()', '(((()(((', '(())(()(()', ')(()))((()', '(()((())', '()(())()', '(())(())', '()()(((())', '()()(()())', '(()(((())(', '()()(())', '()()()((()', ')))))))()(', '))()()()))', '(((()()())', '(()())()()', '(()()()())', ')))()((())', '(()(()()))', '(())()', '()(()(', '()(()(', ')(()()))()', ')(()((()))', '(()())', '()((())())', '()((()()((', '))))(())()', '((()()))', ')((()())', '(()((()))(', '(())()(())', ')))())()((', '((()())())', '))))())(((', ')()()()(((', '))()((()))', ')((()(((', '())(()', '(((())())(', '((())())()', '()(()(()))', '((())())', '(()(()))()', '(((()))))(', '()(((()()(', ')((()((()(', '(())', '(((())))', '(()()()(()', ')())(()(', '((())((()(', '((((()(())', ')))()))(((', '(((()())))', '()()(()())', '()((()()((', '()(()(()))', '((()))(())', '((((()()))', '((())())()', ')()())()()', '))))()))', '(((()())', '((())())', '())))(', ')()(((((()', ')((())((((', '))()((((', '(()(())())', '(((()))())', ')()((()(()', ')()((((())', '((()()())(', '(())(())()', '()', '(((())))((', '((()()(()(', '(())()(())', '(()()(()', ')()()()))(', '()(()())', '()(())', '(()(()))', '()))()(()(', '(()((())))', '(()(((((', '(()(())(()', ')()())((((', '(())((())(', '(()(())(', '((())())()', '()(()(((', '(((())))', '((()(())((', '()((()()', '(())()', ')))))))(()', '(()(((()', '()()(())', '(()()()())', '((())(()))', '(()((())))', '))())()(', '(()(()((()', '()((((()()', ')()())(())', '))))((()()', ')()())))()', '(())(())', '((()()))()', '()()()', '((()()(()(', '(()()(()))', '(()())()', '()()((()()', '()(())((((', '(()())', '()))()((', '))))()(())', '(()(()()))', '())()()(', '())()())))', '(()))))(()', '((((()))))', '))())(()', '()(()())()', '()((()))', '(((())))', '())))())((', '(()())()))', '(()()()(((', ')((((((()(', ')()))(()((', '(())', '(((())))', '(((())))()', '()()))))((', '()()((()', '((()))()()', '())()))(()', '(()((())', '((()', '(()(())(()', '((()(())))', '))()))((((', ')((())(())', '(())(()(((', '(((())()))', '()()()(())', ')()))(()', '((())(()))', '(()()(()()', '()())()(()', '((())(()))', '()(()())', '((((())))(', '((()()((()', '(((())()((', '(())(()()(', '))()))', ')()())(()(', '))()))()))', '(())())(()', ')))()))())', ')(())((()(', ')())))((((', ')())))))((', '()(()())()', '()', '(()(()((((', '(()((())))', '(()(()))', '(((((((())', '((()))', '((()()', '()((((()))', ')((()())))', '()(()())((', '))))()()((', '(((())))', '()()(()())', '()()(())()', '(()()())()', '))()())(()', '()((()))', '()((((', '(()((())))', '()()(((())', '(())(()))(', '((()))()', '()((()((((', '(())((()))', '((((()))))', '(())(())', ')()(())(', '())()((())', '(((()(()))', '()(())()()', '()(())', '(())()', '((()())())', '()()((()', '(())(())', '(()()())()', ')(((()))((', '((()((((', '))((()((((', '()()()()', ')))()())()', ')(()()', '())))()()(', ')())((((', '()', '()(())', '(()(((()))', '(())()()()', ')())))(())', '()((()(()(', '()(()())', '()())())()', '()(()()(()', '()()()', '(((()()))(', '((()))(())', '()()())(()', '((()))((()']
incorrect guesses in testing = []
